<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>note on A-ha - Michael&#39;s Personal Blog</title>
    <link>http://localhost:1313/categories/note/</link>
    <description>Recent content in note on A-ha - Michael&#39;s Personal Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 18 Jan 2019 23:34:52 -0500</lastBuildDate>
    
	<atom:link href="http://localhost:1313/categories/note/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Why is Rust Interesting</title>
      <link>http://localhost:1313/post/why_is_rust_interesting/</link>
      <pubDate>Fri, 18 Jan 2019 23:34:52 -0500</pubDate>
      
      <guid>http://localhost:1313/post/why_is_rust_interesting/</guid>
      <description>Why is Rust Interesting?
 Ownership statically figure out Who owns what and when you (the tread of control) own the memory that you are dealing with and when you don&amp;rsquo;t.  And when you are done with this, the compiler will take care of freeing this piece of memory for you.
There is no need for free in Rust.
Memory is allocated for you and it is freed when you are done using it.</description>
    </item>
    
    <item>
      <title>Neural Networks</title>
      <link>http://localhost:1313/post/neural-networks/</link>
      <pubDate>Wed, 09 Jan 2019 22:07:23 -0500</pubDate>
      
      <guid>http://localhost:1313/post/neural-networks/</guid>
      <description>Hacker&amp;rsquo;s guide to Neural Networks : A tutorial using circuit to explain how neural network works. CS231n: Convolutional Neural Networks for Visual Recognition：The actual course for above link. 机器学习基石（上）: Coursera course on ML.</description>
    </item>
    
    <item>
      <title>SICP</title>
      <link>http://localhost:1313/post/sicp/</link>
      <pubDate>Wed, 09 Jan 2019 22:01:51 -0500</pubDate>
      
      <guid>http://localhost:1313/post/sicp/</guid>
      <description>SICP teaches you how to create proper abstractions.
Find out the correct abstraction is the key to make software manageable.
Course Website
Build Your Own Lisp</description>
    </item>
    
    <item>
      <title>Racketlang Macro Notes</title>
      <link>http://localhost:1313/post/racketlang_macro/</link>
      <pubDate>Wed, 09 Jan 2019 21:59:55 -0500</pubDate>
      
      <guid>http://localhost:1313/post/racketlang_macro/</guid>
      <description>Fear of Macros</description>
    </item>
    
    <item>
      <title>Rust Project Ideas Dump</title>
      <link>http://localhost:1313/post/rust_project/</link>
      <pubDate>Wed, 09 Jan 2019 21:44:24 -0500</pubDate>
      
      <guid>http://localhost:1313/post/rust_project/</guid>
      <description>I went through the Rust book and have followed through its two projects: cli minigrep and poor man&amp;rsquo;s multi-threded server.
To grasp the ideas, the best way is to work on actual Rust project. There are two interesting ones:
  Language VM
So You Want to Build a Language VM
  OS
Writing an OS in Rust os-tutorial
  </description>
    </item>
    
  </channel>
</rss>